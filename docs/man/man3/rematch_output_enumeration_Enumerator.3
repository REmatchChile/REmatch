.TH "rematch::output_enumeration::Enumerator" 3 "Mon Jan 30 2023" "Version 1" "Rematch" \" -*- nroff -*-
.ad l
.nh
.SH NAME
rematch::output_enumeration::Enumerator
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <enumerator\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBEnumerator\fP ()"
.br
.ti -1c
.RI "\fBEnumerator\fP (int amount_of_variables)"
.br
.ti -1c
.RI "\fB~Enumerator\fP ()"
.br
.ti -1c
.RI "void \fBadd_node\fP (\fBECSNode\fP *n)"
.br
.ti -1c
.RI "bool \fBhas_next\fP () const"
.br
.ti -1c
.RI "const \fBMapping\fP * \fBnext\fP ()"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "rematch::output_enumeration::Enumerator::Enumerator ()"

.SS "rematch::output_enumeration::Enumerator::Enumerator (int amount_of_variables)"

.SS "rematch::output_enumeration::Enumerator::~Enumerator ()"

.SH "Member Function Documentation"
.PP 
.SS "void rematch::output_enumeration::Enumerator::add_node (\fBECSNode\fP * n)\fC [inline]\fP"

.SS "bool rematch::output_enumeration::Enumerator::has_next () const\fC [inline]\fP"

.SS "const \fBMapping\fP * rematch::output_enumeration::Enumerator::next ()"


.SH "Author"
.PP 
Generated automatically by Doxygen for Rematch from the source code\&.
