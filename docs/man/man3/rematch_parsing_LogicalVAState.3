.TH "rematch::parsing::LogicalVAState" 3 "Tue Jan 31 2023" "Version 1" "Rematch" \" -*- nroff -*-
.ad l
.nh
.SH NAME
rematch::parsing::LogicalVAState
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBLogicalVAState\fP (const \fBLogicalVAState\fP &s)"
.br
.ti -1c
.RI "void \fBinit\fP ()"
.br
.ti -1c
.RI "\fBLogicalVAState\fP * \fBnextFilter\fP (\fBCharClass\fP charclass)"
.br
.ti -1c
.RI "\fBLogicalVAState\fP * \fBnextCapture\fP (std::bitset< 64 > code)"
.br
.ti -1c
.RI "void \fBadd_capture\fP (std::bitset< 64 > code, \fBLogicalVAState\fP *next)"
.br
.ti -1c
.RI "void \fBadd_filter\fP (\fBCharClass\fP charclass, \fBLogicalVAState\fP *next)"
.br
.ti -1c
.RI "void \fBadd_epsilon\fP (\fBLogicalVAState\fP *next)"
.br
.ti -1c
.RI "bool \fBinitial\fP () const"
.br
.ti -1c
.RI "void \fBset_initial\fP (bool b)"
.br
.ti -1c
.RI "bool \fBaccepting\fP () const"
.br
.ti -1c
.RI "void \fBset_accepting\fP (bool b)"
.br
.ti -1c
.RI "bool \fBsuper_final\fP () const"
.br
.ti -1c
.RI "unsigned int \fBget_flags\fP () const"
.br
.ti -1c
.RI "void \fBset_flags\fP (unsigned int f)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBLogicalVAState\fP &rhs) const"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "unsigned int \fBid\fP"
.br
.ti -1c
.RI "std::list< \fBLogicalVAFilter\fP * > \fBfilters\fP"
.br
.ti -1c
.RI "std::list< \fBLogicalVACapture\fP * > \fBcaptures\fP"
.br
.ti -1c
.RI "std::list< \fBLogicalVAEpsilon\fP * > \fBepsilons\fP"
.br
.ti -1c
.RI "std::list< \fBLogicalVACapture\fP * > \fBbackward_captures_\fP"
.br
.ti -1c
.RI "std::list< \fBLogicalVAFilter\fP * > \fBbackward_filters_\fP"
.br
.ti -1c
.RI "std::list< \fBLogicalVAEpsilon\fP * > \fBbackward_epsilons_\fP"
.br
.ti -1c
.RI "bool \fBtempMark\fP = false"
.br
.RI "For graph algorithms\&. "
.ti -1c
.RI "char \fBcolorMark\fP = 'w'"
.br
.RI "For graph algorithms\&. "
.ti -1c
.RI "unsigned int \fBvisited_and_useful_marks\fP = 0"
.br
.RI "For trimming\&. "
.ti -1c
.RI "unsigned int \fBflags\fP"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for Rematch from the source code\&.
