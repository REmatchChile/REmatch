.TH "rematch::LogicalVAState" 3 "Mon Jan 30 2023" "Version 1" "Rematch" \" -*- nroff -*-
.ad l
.nh
.SH NAME
rematch::LogicalVAState
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <logical_va_state\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBLogicalVAState\fP ()"
.br
.ti -1c
.RI "\fB~LogicalVAState\fP ()"
.br
.ti -1c
.RI "\fBLogicalVAState\fP (const \fBLogicalVAState\fP &s)"
.br
.ti -1c
.RI "void \fBinit\fP ()"
.br
.ti -1c
.RI "\fBLogicalVAState\fP * \fBnextFilter\fP (\fBCharClass\fP charclass)"
.br
.ti -1c
.RI "\fBLogicalVAState\fP * \fBnextCapture\fP (std::bitset< 64 > code)"
.br
.ti -1c
.RI "void \fBadd_capture\fP (std::bitset< 64 > code, \fBLogicalVAState\fP *next)"
.br
.ti -1c
.RI "void \fBadd_filter\fP (\fBCharClass\fP charclass, \fBLogicalVAState\fP *next)"
.br
.ti -1c
.RI "void \fBadd_epsilon\fP (\fBLogicalVAState\fP *next)"
.br
.ti -1c
.RI "bool \fBinitial\fP () const"
.br
.ti -1c
.RI "void \fBset_initial\fP (bool b)"
.br
.ti -1c
.RI "bool \fBaccepting\fP () const"
.br
.ti -1c
.RI "void \fBset_accepting\fP (bool b)"
.br
.ti -1c
.RI "bool \fBsuper_final\fP () const"
.br
.ti -1c
.RI "unsigned int \fBget_flags\fP () const"
.br
.ti -1c
.RI "void \fBset_flags\fP (unsigned int f)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBLogicalVAState\fP &rhs) const"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "unsigned int \fBid\fP"
.br
.ti -1c
.RI "std::list< \fBLogicalVAFilter\fP * > \fBfilters\fP"
.br
.ti -1c
.RI "std::list< \fBLogicalVACapture\fP * > \fBcaptures\fP"
.br
.ti -1c
.RI "std::list< \fBLogicalVAEpsilon\fP * > \fBepsilons\fP"
.br
.ti -1c
.RI "std::list< \fBLogicalVACapture\fP * > \fBbackward_captures_\fP"
.br
.ti -1c
.RI "std::list< \fBLogicalVAFilter\fP * > \fBbackward_filters_\fP"
.br
.ti -1c
.RI "std::list< \fBLogicalVAEpsilon\fP * > \fBbackward_epsilons_\fP"
.br
.ti -1c
.RI "bool \fBtempMark\fP = false"
.br
.ti -1c
.RI "char \fBcolorMark\fP = 'w'"
.br
.ti -1c
.RI "unsigned int \fBvisited_and_useful_marks\fP = 0"
.br
.ti -1c
.RI "unsigned int \fBflags\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "rematch::LogicalVAState::LogicalVAState ()"

.SS "rematch::LogicalVAState::~LogicalVAState ()"

.SS "rematch::LogicalVAState::LogicalVAState (const \fBLogicalVAState\fP & s)"

.SH "Member Function Documentation"
.PP 
.SS "bool rematch::LogicalVAState::accepting () const\fC [inline]\fP"

.SS "void rematch::LogicalVAState::add_capture (std::bitset< 64 > code, \fBLogicalVAState\fP * next)"

.SS "void rematch::LogicalVAState::add_epsilon (\fBLogicalVAState\fP * next)"

.SS "void rematch::LogicalVAState::add_filter (\fBCharClass\fP charclass, \fBLogicalVAState\fP * next)"

.SS "unsigned int rematch::LogicalVAState::get_flags () const\fC [inline]\fP"

.SS "void rematch::LogicalVAState::init ()"

.SS "bool rematch::LogicalVAState::initial () const\fC [inline]\fP"

.SS "\fBLogicalVAState\fP * rematch::LogicalVAState::nextCapture (std::bitset< 64 > code)"

.SS "\fBLogicalVAState\fP * rematch::LogicalVAState::nextFilter (\fBCharClass\fP charclass)"

.SS "bool rematch::LogicalVAState::operator== (const \fBLogicalVAState\fP & rhs) const"

.SS "void rematch::LogicalVAState::set_accepting (bool b)"

.SS "void rematch::LogicalVAState::set_flags (unsigned int f)\fC [inline]\fP"

.SS "void rematch::LogicalVAState::set_initial (bool b)"

.SS "bool rematch::LogicalVAState::super_final () const\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "std::list<\fBLogicalVACapture\fP*> rematch::LogicalVAState::backward_captures_"

.SS "std::list<\fBLogicalVAEpsilon\fP*> rematch::LogicalVAState::backward_epsilons_"

.SS "std::list<\fBLogicalVAFilter\fP*> rematch::LogicalVAState::backward_filters_"

.SS "std::list<\fBLogicalVACapture\fP*> rematch::LogicalVAState::captures"

.SS "char rematch::LogicalVAState::colorMark = 'w'"

.SS "std::list<\fBLogicalVAEpsilon\fP*> rematch::LogicalVAState::epsilons"

.SS "std::list<\fBLogicalVAFilter\fP*> rematch::LogicalVAState::filters"

.SS "unsigned int rematch::LogicalVAState::flags"

.SS "unsigned int rematch::LogicalVAState::id"

.SS "bool rematch::LogicalVAState::tempMark = false"

.SS "unsigned int rematch::LogicalVAState::visited_and_useful_marks = 0"


.SH "Author"
.PP 
Generated automatically by Doxygen for Rematch from the source code\&.
