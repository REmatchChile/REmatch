import ripplet from './ripplet';
export default ripplet;
export * from './ripplet';
// use passive event listener if possible
var eventListenerOptions = true;
{
    var testOptions = {
        get passive() {
            eventListenerOptions = { passive: true, capture: true };
            return true;
        },
    };
    var noop = function () { };
    addEventListener('test', noop, testOptions);
    removeEventListener('test', noop, testOptions);
}
addEventListener('mousedown', function (event) {
    if (event.button !== 0) {
        return;
    }
    var currentTarget = findRippletTarget(event.target);
    if (currentTarget) {
        ripplet({ currentTarget: currentTarget, clientX: event.clientX, clientY: event.clientY }, parseOptions(currentTarget.getAttribute('data-ripplet')));
    }
}, eventListenerOptions);
function parseOptions(optionsString) {
    if (!optionsString) {
        return;
    }
    var options = {};
    for (var _i = 0, _a = optionsString.split(';'); _i < _a.length; _i++) {
        var s = _a[_i];
        var index = s.indexOf(':');
        options[s.slice(0, index).trim().replace(/[a-zA-Z0-9_]-[a-z]/g, function ($0) { return $0[0] + $0[2].toUpperCase(); })] = s.slice(index + 1).trim();
    }
    return options;
}
// Element.prototype.closest is not implemented in IE
// https://caniuse.com/#feat=element-closest
function findRippletTarget(element) {
    while (element && !element.hasAttribute('data-ripplet')) {
        element = element.parentElement;
    }
    return element;
}
